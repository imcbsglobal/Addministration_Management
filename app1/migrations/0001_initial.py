# Generated by Django 5.1.1 on 2025-01-11 12:38

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('business_type', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('specification', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JobTitlee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='areas', to='app1.district')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'district')},
            },
        ),
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('place', models.CharField(max_length=255)),
                ('district', models.CharField(choices=[('Alappuzha', 'Alappuzha'), ('Ernakulam', 'Ernakulam'), ('Idukki', 'Idukki'), ('Kannur', 'Kannur'), ('Kasaragod', 'Kasaragod'), ('Kollam', 'Kollam'), ('Kottayam', 'Kottayam'), ('Kozhikode', 'Kozhikode'), ('Malappuram', 'Malappuram'), ('Palakkad', 'Palakkad'), ('Pathanamthitta', 'Pathanamthitta'), ('Thiruvananthapuram', 'Thiruvananthapuram'), ('Thrissur', 'Thrissur'), ('Wayanad', 'Wayanad')], max_length=255)),
                ('education', models.CharField(max_length=255)),
                ('experience', models.TextField()),
                ('dob', models.DateField()),
                ('remarks', models.TextField(blank=True, null=True)),
                ('cv_attachment', models.FileField(upload_to='cv_attachments/')),
                ('job_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.jobtitlee')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='app1.area')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='app1.district')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('userid', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('user_level', models.CharField(choices=[('normal', 'Normal User'), ('admin_level', 'Admin Level User')], default='normal', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.branch')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('remark', models.TextField()),
                ('voice_note', models.FileField(blank=True, null=True, upload_to='voice_notes/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Not Completed', 'Not Completed'), ('Completed', 'Completed')], default='Not Completed', max_length=20)),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.complaint')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.user')),
                ('assigned_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_service_logs', to='app1.user')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('customer', models.CharField(max_length=200)),
                ('complaint', models.TextField()),
                ('remarks', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Solved', 'Solved')], default='Pending', max_length=20)),
                ('place', models.CharField(max_length=200)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.user')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firm_name', models.CharField(max_length=200)),
                ('customer_name', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=20)),
                ('landmark', models.CharField(max_length=200)),
                ('business_nature', models.CharField(choices=[('', 'Select'), ('Agency/Distribution', 'Agency/Distribution'), ('Auto Mobiles', 'Auto Mobiles'), ('Bakery', 'Bakery'), ('Boutique', 'Boutique'), ('clinic', 'Clinic'), ('footware', 'Footware'), ('hardware', 'Hardware'), ('hospital', 'Hospital'), ('Hotels/ Resorts', 'Hotels/ Resorts'), ('Hyper Market', 'Hyper Market'), ('Jewellery', 'Jewellery'), ('Lab', 'Lab'), ('Opticals', 'Opticals'), ('Pharmacy', 'Pharmacy'), ('production', 'Production'), ('restaurant', 'Restaurant'), ('retail', 'Retail'), ('School', 'School'), ('supermarket', 'Supermarket'), ('textile', 'Textile'), ('Travels', 'Travels'), ('wholesale', 'Wholesale'), ('another', 'Another')], default='', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('quotation_required', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='lead_images/')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('planet_entry', models.BooleanField(default=False)),
                ('voice_note', models.FileField(blank=True, null=True, upload_to='voice_notes/')),
                ('added_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('added_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leads', to='app1.area')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leads', to='app1.district')),
                ('hardwares', models.ManyToManyField(blank=True, related_name='leads', to='app1.hardware')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leads', to='app1.location')),
                ('requirements', models.ManyToManyField(to='app1.requirement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.user')),
            ],
        ),
        migrations.CreateModel(
            name='LeadHardwarePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_price', models.FloatField()),
                ('hardware', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.hardware')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hardware_prices', to='app1.lead')),
            ],
            options={
                'unique_together': {('lead', 'hardware')},
            },
        ),
        migrations.CreateModel(
            name='LeadRequirementAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement_amounts', to='app1.lead')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.requirement')),
            ],
            options={
                'unique_together': {('lead', 'requirement')},
            },
        ),
    ]
